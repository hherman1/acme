# autoexec on save: Watch 'cat /usr/local/plan9/plumb/initial.plumbing | 9p write plumb/rules && 9p read plumb/rules'

# existing files in a git diff, possibly tagged by line number, go to editor
type is text
data matches '(a|b)/([.a-zA-Z¡-￿0-9_/\-@]*[a-zA-Z¡-￿0-9_/\-])('$addr')?'
arg isfile	$2
data set	$file
attr add	addr=$4
plumb to edit
plumb client $editor

# Commit hashes
type is text
data matches 'commit ([a-f0-9]+)'
plumb start viewcommit $wdir $1

# Pull requests
type is text
data matches '(http.*github.*pull/[0-9]+)'
plumb start review $1 $wdir

# Pull requests shrot notation
type is text
data matches '(#[0-9]+)'
plumb start review $1 $wdir

#exec URIs
type is text
data matches '(exec://[a-zA-Z0-9/]+)'
plumb start execuri $1 $wdir

#Valid characters for a package
package='[a-z./\-A-Z0-9]+'

# go doc for types
type is text
data matches 'type ([a-zA-Z]+)\.([a-zA-Z]+).*'
plumb start inpage $wdir doc $1.$2

# go doc for methods
# eg: func (c *sync.Cond) Broadcast()
type is text
data matches 'func \([a-zA-Z]+ \*?('$package')\.([A-Za-z]+)\) ([a-zA-Z]+).*'
plumb start inpage $wdir doc $1.$2.$3

# go doc for packages
# eg: package sync // import "sync"
type is text
data matches 'package ([a-z]+).*'
plumb start inpage $wdir doc $1

# go doc for functions
# eg: func strings.Compare(a, b string) int
type is text
data matches ' *func ('$package')\.([A-Za-z]+).*'
plumb start inpage $wdir doc $1.$2

# go doc for imports
# eg: 	"context"
type is text
data matches '^	"('$package')"$'
plumb start inpage $wdir doc $1
#func github.com/carlmjohnson/requests.ToFile(name string) ResponseHandler


#must have trailing new line or fails
